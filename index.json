[{"content":"\nLooking to make your Satellite website _yours_?\nYou arrived at the right place.\nThis page lists all color customization options Satellite offers.\n\nEach section of a Satellite site can be colored independently, allowing you to\ntheme your website however you want.\n\nColors can be customized using `params.colors` configuration options.\nThis page lists all color options.\nCheck out the config example at the bottom for a concrete example.\n\n## Primary Colors\n\nUsed for the main section of the website, where content is displayed.\n\n| Option       | Description                              |\n| ------------ | ---------------------------------------- |\n| `primary-b1` | Main background.                         |\n| `primary-b2` | Light card background.                   |\n| `primary-b3` | Dark card background.                    |\n| `primary-b4` | Table background.                        |\n| `primary-b5` | Table alternate background.              |\n| `primary-a1` | Card border.                             |\n| `primary-a2` | Content link.                            |\n| `primary-a3` | Content link hover.                      |\n| `primary-a4` | Content link active.                     |\n| `primary-f4` | List markers and table of contents text. |\n| `primary-f5` | Content text color.                      |\n| `primary-f6` | Page link hover.                         |\n| `primary-f7` | Page link active.                        |\n\n## Secondary Colors\n\nUsed for top navigation bar.\n\n| Option         | Description               |\n| -------------- | ------------------------- |\n| `secondary-b1` | Navbar input hover.       |\n| `secondary-b2` | Navbar input background.  |\n| `secondary-b3` | Navbar background.        |\n| `secondary-b4` | Navbar hover background.  |\n| `secondary-b5` | Navbar active background. |\n| `secondary-a1` | Navbar input border.      |\n| `secondary-f1` | Navbar text.              |\n| `secondary-f8` | Navbar input placeholder. |\n| `secondary-f9` | Navbar search text.       |\n\n## Tertiary Colors\n\nUsed for side navigation menu and mobile hamburger navigation menu.\n\n| Option        | Description                  |\n| ------------- | ---------------------------- |\n| `tertiary-b5` | Side menu background.        |\n| `tertiary-b6` | Side menu hover background.  |\n| `tertiary-b7` | Side menu active background. |\n| `tertiary-a3` | Side menu indicator.         |\n| `tertiary-f3` | Side menu text.              |\n| `tertiary-f4` | Side menu text hover.        |\n| `tertiary-f5` | Side menu text active.       |\n| `tertiary-f6` | Side menu active title.      |\n\n## Quaternary Colors\n\nUsed for search results popup.\n\n| Option          | Description                           |\n| --------------- | ------------------------------------- |\n| `quaternary-b1` | Search popup background.              |\n| `quaternary-b2` | Search result link background.        |\n| `quaternary-b3` | Search result link hover background.  |\n| `quaternary-b4` | Search result link active background. |\n| `quaternary-a1` | Search popup border.                  |\n| `quaternary-f3` | Search results section title.         |\n| `quaternary-f4` | Search result page title.             |\n| `quaternary-f5` | Search result link text.              |\n| `quaternary-f6` | Search result link hover text.        |\n| `quaternary-f7` | Search result link active text.       |\n\n## Syntax Highlight Colors\n\nUsed for code block syntax highlight.\n\n| Option              | Description                  |\n| ------------------- | ---------------------------- |\n| `syntax-background` | Syntax highlight background. |\n| `syntax-foreground` | Syntax highlight text.       |\n| `syntax-comment`    | Comment highlight.           |\n| `syntax-string`     | String literal highlight.    |\n| `syntax-special`    | Special text highlight.      |\n| `syntax-operator`   | Keyword highlight.           |\n| `syntax-literal`    | Literal highlight.           |\n\n## Dark Theme Customization\n\nAdd `dark-` before a color name to set it in dark mode.\nFor example, to set the `primary-b1` color in dark theme:\n\n```toml\n[params]\n[params.colors]\n  dark-primary-b1 = \"hsl(355, 20%, 10%)\"\n```\n\n## Config Example\n\nBelow is a configuration example in TOML format.\n\n```toml\n[params]\n[params.colors]\n  primary-b1 = \"hsl(355, 10%, 98%)\"\n  primary-b2 = \"hsl(355, 15%, 97%)\"\n  primary-b3 = \"hsl(355, 25%, 95%)\"\n  primary-b4 = \"hsl(355, 7.5%, 96%)\"\n  primary-b5 = \"hsl(355, 5%, 94%)\"\n  primary-a1 = \"hsl(355, 20%, 90%)\"\n  primary-f4 = \"hsl(355, 20%, 45%)\"\n  primary-f5 = \"hsl(355, 5%, 40%)\"\n  primary-f6 = \"hsl(355, 25%, 30%)\"\n  primary-f7 = \"hsl(355, 35%, 25%)\"\n  secondary-b3 = \"hsl(355, 95%, 30%)\"\n  secondary-b4 = \"hsl(350, 95%, 28%)\"\n  secondary-b5 = \"\"\"\n  linear-gradient(\n    30deg,\n    hsl(0, 80%, 20%),\n    hsl(350, 90%, 25%))\"\"\"\n  secondary-f1 = \"hsl(350, 15%, 80%)\"\n  tertiary-b5 = \"hsl(350, 25%, 95%)\"\n  tertiary-b6 = \"hsl(350, 30%, 90%)\"\n  tertiary-b7 = \"hsl(350, 35%, 88%)\"\n  tertiary-a3 = \"hsl(350, 35%, 70%)\"\n  tertiary-f3 = \"hsl(350, 20%, 45%)\"\n  tertiary-f4 = \"hsl(350, 30%, 35%)\"\n  tertiary-f5 = \"hsl(350, 50%, 40%)\"\n  tertiary-f6 = \"hsl(350, 35%, 40%)\"\n  syntax-background = \"hsl(250, 15%, 97%)\"\n  syntax-foreground = \"hsl(250, 35%, 40%)\"\n  syntax-comment = \"hsl(250, 5%, 50%)\"\n  syntax-string = \"hsl(210, 100%, 45%)\"\n  syntax-special = \"hsl(360, 75%, 60%)\"\n  syntax-operator = \"hsl(360, 75%, 60%)\"\n  syntax-literal = \"hsl(360, 75%, 60%)\"\n```\n\nNote that while the example uses `hsl` colors, any CSS color format can be used.\n","permalink":"https://lkummer.github.io/Satellite/reference/color-customization/","section":"Reference","title":"Color Customization"},{"content":"\nFamiliarize yourself with the development workflow of the project.\n\nThis guide assumes you are somewhat familiar with Hugo theme development.\nIf not, [check out the Hugo documentation](https://gohugo.io/documentation/).\n\n## Basic Workflow\n\nDescribes the basic workflow of Satellite development.\n\n### Installation\n\nAfter cloning the Satellite repository, install the required dependencies:\n\n```s\n$ npm ci\n```\n\n### Development Server\n\nWhen making changes, a development server with the demo site should be used.\nTo run demo site development server:\n\n```s\n$ npm run dev\n```\n\nTo documentation site development server:\n\n```s\n$ npm run dev:doc\n```\n\n### Formatting and Linting\n\nBefore committing changes, make sure your code is formatted and passes all linters.\n\n```s\n$ npm run format\n$ npm run lint\n```\n\n## Development Scripts\n\nQuick summary of the development scripts:\n\n- `build` - Build the Hugo theme, demo and documentation sites for production.\n  Linting the sources in the process. Built artifacts are placed in the `dist`\n  folder.\n- `build:theme:debug` - Build the Hugo theme unminified with source maps.\n- `dev` - Run the demo site development server.\n- `dev:doc` - Run the documentation site development server.\n- `lint` - Lint all files with ESLint, Stylelint and Prettier.\n- `format` - Format all files with ESLint, Stylelint and Prettier.\n\nThe scripts can be invoked using `npm run`:\n\n```s\n$ npm run \u003cscript\u003e\n```\n\nFor example, if we want to build the theme we can use the `build` script:\n\n```s\n$ npm run build\n```\n","permalink":"https://lkummer.github.io/Satellite/contribution/development/","section":"Contribution","title":"Development Workflow"},{"content":"\nSatellite is a Hugo theme for creating beautiful documentation websites.\n\nThis documentation is built with Satellite, [there is also a demo for you to check out](https://lkummer.github.io/Satellite/demo).\n","permalink":"https://lkummer.github.io/Satellite/","section":"Documentation","title":"Documentation"},{"content":"\nThis guide goes through building a multi-version Satellite site from a Git repository versioned with Git tags.\n\n## Requirements\n\n- Satellite site inside a Git repository, versioned with Git tags.\n- Git installed.\n- Hugo `v0.109.0` or later installed.\n- Python installed. The build script was developed against Python 3.10 but slightly older versions should work.\n\nThis guide assumes you are working on Linux.\nOn Windows you may need to run `python` instead of `python3`.\n\n## Downloading the Build Script\n\nDownload [the multi-version build script from Satellite's GitHub repository](https://raw.githubusercontent.com/LKummer/Satellite/master/build.py).\n\n```\nwget https://raw.githubusercontent.com/LKummer/Satellite/master/build.py\n```\n\nYou should now have the `build.py` file containing the build script.\n\n## Building the Site\n\nThis guide assumes your site's Git repository is hosted at `github.com/LKummer/example`, and you wish to build a pages site for it in the URL `lkummer.github.io/example`.\nChange the URLs in the following command to fit your site.\n\nRun the following command to build the Satellite site versioned with the Git tags of the repository:\n\n```\npython3 build.py --base-url http://lkummer.github.io/example https://github.com/LKummer/example.git\n```\n\nYou can see the built multi-version site in the `build_output` directory.\nIt can be hosted like any static site.\n\n## More Options\n\nIf your site is not at the root of the repository, you wish to only build some of the tags, or want to change the output directory, check out the build script's help:\n\n```\npython3 build.py --help\n```\n","permalink":"https://lkummer.github.io/Satellite/how-to/build-multi-version-sites/","section":"How-Tos","title":"How to build a multi-version site"},{"content":"\nThis guide goes through deploying a Satellite site automatically with GitHub Actions on GitHub Pages.\n\n## Requirements\n\n- Git repo with Satellite site in it's root directory. Hosted on GitHub.\n\n## Creating a CI Pipeline\n\nCreate a `.github/workflows/deploy.yml` file, and paste the following content in it:\n\n```yaml\non: push\n\njobs:\n  deploy:\n    name: Deploy to GitHub Pages\n    runs-on: ubuntu-latest\n    permissions:\n      pages: write\n      id-token: write\n    environment:\n      name: github-pages\n      url: ${{ steps.pages-url.outputs.url }}\n    steps:\n      - name: Set GitHub Pages URL variable\n        id: pages-url\n        run: echo \"url=https://${GITHUB_REPOSITORY_OWNER,,}.github.io${GITHUB_REPOSITORY/${GITHUB_REPOSITORY_OWNER/}}\" \u003e\u003e $GITHUB_OUTPUT\n      - uses: actions/checkout@v3\n      - name: Setup Hugo\n        uses: peaceiris/actions-hugo@v2\n        with:\n          hugo-version: '0.111.3'\n      - run: hugo --baseURL '${{ steps.pages-url.outputs.url }}'\n      - uses: actions/upload-pages-artifact@v1\n        with:\n          path: public\n      - uses: actions/deploy-pages@v2\n```\n\nAdd the file to Git, and commit it:\n\n```\ngit add .github/workflows/deploy.yml\ngit commit\n```\n\n## Running the Pipeline\n\nTo run the pipeline and deploy the site, push the commit created in the previous step:\n\n```\ngit push\n```\n\nOpen GitHub, you should be able to see the pipeline running.\nOnce the pipeline succeeds, you may see your site in GitHub Pages.\n\nOn GitHub, in your repository's page: Go to the `github-pages` environment, and click \"View deploymnet\" to see your Pages site.\n","permalink":"https://lkummer.github.io/Satellite/how-to/deploy-github-pages/","section":"How-Tos","title":"How to deploy to GitHub Pages"},{"content":"\nThis guide goes through deploying a Satellite site automatically with GitLab CI on GitLab Pages.\n\n## Requirements\n\n- Git repo with Satellite site in it's root directory. Hosted on GitLab (either SaaS or self-managed).\n\nNote that when using self-managed GitLab, you must have GitLab Pages and a GitLab CI runner set up.\n\n## Creating a CI Pipeline\n\nCreate a `.gitlab-ci.yml` file, and paste the following content in it:\n\n```yml\nstages:\n  - deploy\n\npages:\n  stage: deploy\n  image: debian:bullseye\n  script:\n    - apt-get update\n    - apt-get install --yes wget\n    - wget -O /tmp/hugo.tar.gz https://github.com/gohugoio/hugo/releases/download/v0.111.3/hugo_0.111.3_linux-amd64.tar.gz\n    - mkdir /tmp/hugo\n    - tar -xzf /tmp/hugo.tar.gz -C /tmp/hugo\n    - mv /tmp/hugo/hugo /usr/local/bin\n    - hugo --baseURL \"${CI_PAGES_URL}\"\n  artifacts:\n    paths:\n      - public\n```\n\nAdd the file to Git, and commit it:\n\n```\ngit add .gitlab-ci.yml\ngit commit\n```\n\n## Running the Pipeline\n\nTo run the pipeline and deploy the site, push the commit created in the previous step:\n\n```\ngit push\n```\n\nOpen GitLab, you should be able to see the pipeline running.\nOnce the pipeline succeeds, you may see your site in GitLab Pages.\n\nOn GitLab, in your repository's page: Go to Settings, then Pages.\nYou should see a link to your Pages site.\nOpen the link to see your Pages site.\n","permalink":"https://lkummer.github.io/Satellite/how-to/deploy-gitlab-pages/","section":"How-Tos","title":"How to deploy to GitLab Pages"},{"content":"\nWant to make your Satellite website _pop_ with beautiful SVG logos?\nThis page contains everything you need to know to configure the customizable icons\nand logos of your Satellite website.\n\n## Favicon\n\nThe favicon can be customized using the `params.icons.favicon` configuration\noption. However, you also need to host your favicon.\n\nPlace the favicon in the `static/` folder of the website.\nIt is recommended to use a subfolder, such as `static/images/`.\nWith your icon in the static folder, set `params.icons.favicon` to the relative\npath of your favicon.\n\nFor example, Using `static/images/favicon.svg`:\n\n```toml\n[params]\n[params.icons]\n  favicon = \"images/favicon.svg\"\n```\n\n## Navigation Bar Logo\n\nThe navigation bar logo can be customized using the `params.icons.navbarIcon`\nconfiguration option.\nNote the navigation bar logo is completely optional and Satellite is designed to\nlook great even without it.\n\n`params.icons.navbarIcon` should contain an SVG logo with the `navbar-logo-icon`\nclass applied.\n\nTo create hover animations, use the `--logo-hover` custom property.\nNormally set to `0`, when users hover over the navigation bar logo (and text) it is set to `1`.\n\nCheck out the demo site configuration for an example.\n","permalink":"https://lkummer.github.io/Satellite/reference/icons/","section":"Reference","title":"Icons and Logos"},{"content":"\nThis document assumes basic knowledge of [Hugo menus](https://gohugo.io/content-management/menus/).\n\n## Top Navigation\n\nThe `params.logoPermalink` option can be used to set where the top navigation\nlogo links to. By default the logo links to the site's index.\n\nThe `main` menu entries are listed in the top navigation bar and in the mobile\nhamburger menu. Note that `weight` can be set to order menu items.\n\nPages on the website can be added to the `main` menu through front matter options,\nfor example:\n\n```toml\n[menu.main]\n  weight = -10\n```\n\nExternal pages can be added through the site configuration, for example:\n\n```toml\n[menu]\n[[menu.main]]\n  name = \"Github\"\n  url = \"https://github.com/LKummer/Satellite-Hugo-Theme\"\n```\n\n## Section Navigation\n\nAll sections are listed in the index page, side navigation menu and mobile\nhamburger menu. `weight` front matter option can be set to order sections.\nLower weighted sections are listed first, unweighted sections are treated as if\nthey are weighted `0`.\n","permalink":"https://lkummer.github.io/Satellite/reference/menus/","section":"Reference","title":"Menus and Navigation"},{"content":"\nBy the end of this tutorial you will have a Satellite site with a page of your\nown content ready to deploy.\n\nIn this part of the tutorial we will set up a Hugo site with Satellite.\n\n## Requirements\n\nYou need a computer with Hugo installed to complete this guide.\n\nIf you do not have Hugo installed, follow [the installation guide for your system.](https://gohugo.io/installation/)\nUse Hugo `v0.109.0` or later for the best experience.\n\n## Creating a Satellite Site\n\nHead over [to the latest release](https://github.com/LKummer/Satellite/releases/latest) and download a `quickstart-site` archive.\nCreate a new folder for your site to reside in.\nExtract the contents of the `quickstart-site` archive in your site's folder.\n\nYou should now have a working Hugo site.\nTry building the site by running the following command:\n\n```\nhugo\n```\n\nWe may have a built site, but it's not yet ready to deploy.\nWe still have some configuration left to do.\n\n## Basic Satellite Configuration\n\nOpen `config.toml` in your site's folder.\nEdit `title` to your site's name.\nRemove `menu.main` or change it's entries to suit your needs.\n\nChange `baseURL` to the base URL of your site.\nWhen using GitHub Pages, it should be `https://\u003cusername\u003e.github.io/\u003crepository\u003e`.\nWhen using GitLab Pages, it should be `https://\u003cusername\u003e.gitlab.io/\u003crepository\u003e`.\n\nThe `config.toml` file is where all Satellite configuration happens.\nCheck out the reference section for more information about Satellite's config options.\n\nTo ensure nothing went wrong during this step, try building the site by running the following command:\n\n```\nhugo\n```\n\nNow our site is ready to deploy, but it's still just the demo site.\nWe need to add our own content.\n\nIn the next part we will be adding our own content.\n[Go to part 2.]({{\u003c relref \"part-2-adding-content\" \u003e}})\n","permalink":"https://lkummer.github.io/Satellite/tutorial/part-1-getting-started/","section":"Tutorial","title":"Part 1 - Getting Started"},{"content":"\nContinuing where we finished part 1, in this part we will create a section and a\npage with our own content.\n\nThis guide assumes basic familiarity with Hugo terms.\nSpecifically familiarity [with sections](https://gohugo.io/content-management/sections/),\n[front matter](https://gohugo.io/content-management/front-matter/)\nand single content pages.\n\nMake sure [to complete part 1 of the tutorial]({{\u003c relref \"part-1-getting-started\" \u003e}})\nbefore continuing.\n\n## Starting the Development Server\n\nGo to your site's folder and run the following command:\n\n```\nhugo server\n```\n\nHugo will start a hot-reload development server.\nLeave this server running during the tutorial, when following the next steps you should be able to see the site change in your browser.\n\nOpen a browser and go to the URL `hugo server` wrote to the shell.\nIt is usually `http://localhost:1313`.\nYou should see your Satellite site.\n\n## Creating a Section\n\nFor the purpose of this tutorial, we will create a Tutorial section.\n\nCreate a `content/tutorial` folder.\nCreate a `content/tutorial/_index.md` file.\nPaste the following text inside the `_index.md` file:\n\n```toml\n+++\ntitle = \"Tutorial\"\ndescription = \"Make your first steps.\"\n+++\n```\n\nThe `_index.md` file of the section contains section configuration in it's front matter.\nOptionally, sections can have `weight`. Lower weighted sections are listed first\nin section lists. Unweighted sections are treated as if their `weight` is `0`.\n\n```toml\nweight = 100\n```\n\nWe now have a Tutorial section in our site.\nYou should be able to see it in the browser.\n\n## Creating a Page\n\nNext we will create a page inside the Tutorial section.\n\nCreate a `content/tutorial/part-1-getting-started.md` file.\nPaste the following text insie it:\n\n```\n+++\ntitle = \"Part 1 - Getting Started\"\n+++\n\nMarkdown content of the page.\n```\n\nOptionally, pages can have a `description` front matter property.\nthe `description` is used in social media and search engine meta tags,\nand indexed in the internal search.\n\n```toml\ndescription = \"Awesome guide to get you started.\"\n```\n\nWe now have a page inside our Tutorial section.\nYou should be able to see it in the browser.\n\n## Final Words\n\nWe have achieved the goal of this tutorial.\nWe have a Satellite site with a section with our own content.\n\nYou can now publish your Satellite site with GitHub Pages, GitLab Pages or any other way to host static sites.\n","permalink":"https://lkummer.github.io/Satellite/tutorial/part-2-adding-content/","section":"Tutorial","title":"Part 2 - Adding Content"},{"content":"\nDo you need Google enhanced search results and enhanced social media sharing?\nThis page documents Satellite's SEO related configuration options.\n\n## General\n\nThe `title` and `params.seo.description` configuration options can be used to set\na title and description for your website.\n\n```toml\ntitle = \"Satellite\"\n\n[params]\n[params.seo]\n  description = \"Satellite Hugo theme demo.\"\n```\n\nIn content pages, the title and description of the current page are used.\n\n## Twitter and Facebook\n\nTwitter and facebook allow specifying an image for your website.\nAdditionally, Twitter allows choosing card types.\n\nTwitter card can be chosen with `params.seo.twitterCard`, it can be set to\n`summary`, `summary_large_image`, `app` or `player`.\n\nUse `params.seo.images.ogPath`, `params.seo.images.ogHeight` and\n`params.seo.images.ogWidth` to the preferred image for your website.\nMake sure to place your image in the `static/` folder. The example below uses an\nimage in a `static/images/` folder.\n\n```\n[params]\n[params.seo]\n  twitterCard = \"summary\"\n  [params.seo.images]\n    ogPath = \"images/image.png\"\n    ogHeight = \"1080\"\n    ogWidth = \"1920\"\n```\n\n## Google\n\nGoogle allows specifying multiple images for your page.\nFor best results, use images at least 1200 pixels wide and in 1x1, 4x3 and 16x9\naspect ratios.\n\nUse the `params.seo.images.ldPaths` array to specify your preferred images.\nMake sure to place your images in the `static/` folder. The example below uses\nimages in a `static/images/` folder.\n\n```toml\n[params]\n[params.seo]\n  [params.seo.images]\n    ldPaths = [\n      \"images/image-1x1.png\",\n      \"images/image-4x3.png\",\n      \"images/image-16x9.png\"\n    ]\n```\n\n## Config Example\n\nBelow is a site configuration example in TOML format.\n\n```toml\n[params]\n[params.seo]\n  description = \"Satellite Hugo theme demo.\"\n  twitterCard = \"summary\"\n  [params.seo.images]\n    ldPaths = [\n      \"images/image-1x1.png\",\n      \"images/image-4x3.png\",\n      \"images/image-16x9.png\"\n    ]\n    ogPath = \"images/image.png\"\n    ogHeight = \"1080\"\n    ogWidth = \"1920\"\n```\n\nNote that in this example, images are places in a `static/images/` folder.\n","permalink":"https://lkummer.github.io/Satellite/reference/seo/","section":"Reference","title":"Search Engine Optimizations"},{"content":"\nSatellite is built using a custom Webpack setup which processes `SCSS` files\nand copies files to different folders in order to use Sass without requiring\nextended Hugo and reduce folder nesting.\nThe [Webpack Hugo theme boilerplate is available on Github](https://github.com/LKummer/hugo-theme-boilerplate).\n\n## Folder Structure\n\nThe project has a somewhat unique folder structure for a Hugo theme as it uses\nWebpack to build the theme itself.\n\n- `layouts/` is copied to the theme's layouts folder.\n- `public/` is copied to the theme's root folder.\n- `src/` contains `.js` and `.scss` source files, including the Webpack entry point `src/index.js`.\n- `demo/` contains the demo website.\n- `doc/` contains the documentation website.\n\n## Style Architecture\n\nThe stylesheets are following [the SMACSS architecture](http://smacss.com/),\nand make ample use of Sass' `\u0026` operator to create nicely organized stylesheets.\n\nThe stylesheets reside in the `src/style/` folder, the usual SMACSS folders can\nbe found inside.\n\nPretty much everything is parameterized with CSS custom properties. Custom property\ndefinitions can be found in `src/style/theme/`\n\nEach part of the theme uses a separate color _family_ to for better color\ncustomization by end users. For example, the top navigation bar uses _secondary_\ncolors.\n","permalink":"https://lkummer.github.io/Satellite/contribution/architecture/","section":"Contribution","title":"Theme Architecture"}]
