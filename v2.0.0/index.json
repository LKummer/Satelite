[{"content":"\nLooking to make your Satellite website _yours_?\nYou arrived at the right place.\nThis page lists all color customization options Satellite offers.\n\nEach section of a Satellite site can be colored independently, allowing you to\ntheme your website however you want.\n\nColors can be customized using `params.colors` configuration options.\nThis page lists all color options.\nCheck out the config example at the bottom for a concrete example.\n\n## Primary Colors\n\nUsed for the main section of the website, where content is displayed.\n\n| Option       | Description                              |\n| ------------ | ---------------------------------------- |\n| `primary-b1` | Main background.                         |\n| `primary-b2` | Light card background.                   |\n| `primary-b3` | Dark card background.                    |\n| `primary-b4` | Table background.                        |\n| `primary-b5` | Table alternate background.              |\n| `primary-a1` | Card border.                             |\n| `primary-a2` | Content link.                            |\n| `primary-a3` | Content link hover.                      |\n| `primary-a4` | Content link active.                     |\n| `primary-f4` | List markers and table of contents text. |\n| `primary-f5` | Content text color.                      |\n| `primary-f6` | Page link hover.                         |\n| `primary-f7` | Page link active.                        |\n\n## Secondary Colors\n\nUsed for top navigation bar.\n\n| Option         | Description               |\n| -------------- | ------------------------- |\n| `secondary-b2` | Navbar search background. |\n| `secondary-b3` | Navbar background.        |\n| `secondary-b4` | Navbar hover background.  |\n| `secondary-b5` | Navbar active background. |\n| `secondary-a1` | Navbar search border.     |\n| `secondary-f1` | Navbar text.              |\n| `secondary-f9` | Navbar search text.       |\n\n## Tertiary Colors\n\nUsed for side navigation menu and mobile hamburger navigation menu.\n\n| Option        | Description                  |\n| ------------- | ---------------------------- |\n| `tertiary-b5` | Side menu background.        |\n| `tertiary-b6` | Side menu hover background.  |\n| `tertiary-b7` | Side menu active background. |\n| `tertiary-a3` | Side menu indicator.         |\n| `tertiary-f3` | Side menu text.              |\n| `tertiary-f4` | Side menu text hover.        |\n| `tertiary-f5` | Side menu text active.       |\n| `tertiary-f6` | Side menu active title.      |\n\n## Syntax Highlight Colors\n\nUsed for code block syntax highlight.\n\n| Option              | Description                  |\n| ------------------- | ---------------------------- |\n| `syntax-background` | Syntax highlight background. |\n| `syntax-foreground` | Syntax highlight text.       |\n| `syntax-comment`    | Commend text highlight.      |\n| `syntax-special`    | Special text highlight.      |\n| `syntax-operator`   | Operator text highlight.     |\n| `syntax-lliteral`   | lliteral text highlight.     |\n\n## Dark Theme Customization\n\nAdd `dark-` before a color name to set it in dark mode.\nFor example, to set the `primary-b1` color in dark theme:\n\n```toml\n[params]\n[params.colors]\n  dark-primary-b1 = \"hsl(355, 20%, 10%)\"\n```\n\n## Config Example\n\nBelow is a configuration example in TOML format.\n\n```toml\n[params]\n[params.colors]\n  primary-b1 = \"hsl(355, 10%, 98%)\"\n  primary-b2 = \"hsl(355, 15%, 97%)\"\n  primary-b3 = \"hsl(355, 25%, 95%)\"\n  primary-b4 = \"hsl(355, 7.5%, 96%)\"\n  primary-b5 = \"hsl(355, 5%, 94%)\"\n  primary-a1 = \"hsl(355, 20%, 90%)\"\n  primary-f4 = \"hsl(355, 20%, 45%)\"\n  primary-f5 = \"hsl(355, 5%, 40%)\"\n  primary-f6 = \"hsl(355, 25%, 30%)\"\n  primary-f7 = \"hsl(355, 35%, 25%)\"\n  secondary-b3 = \"hsl(355, 95%, 30%)\"\n  secondary-b4 = \"hsl(350, 95%, 28%)\"\n  secondary-b5 = \"\"\"\n  linear-gradient(\n    30deg,\n    hsl(0, 80%, 20%),\n    hsl(350, 90%, 25%))\"\"\"\n  secondary-f1 = \"hsl(350, 15%, 80%)\"\n  tertiary-b5 = \"hsl(350, 25%, 95%)\"\n  tertiary-b6 = \"hsl(350, 30%, 90%)\"\n  tertiary-b7 = \"hsl(350, 35%, 88%)\"\n  tertiary-a3 = \"hsl(350, 35%, 70%)\"\n  tertiary-f3 = \"hsl(350, 20%, 45%)\"\n  tertiary-f4 = \"hsl(350, 30%, 35%)\"\n  tertiary-f5 = \"hsl(350, 50%, 40%)\"\n  tertiary-f6 = \"hsl(350, 35%, 40%)\"\n  syntax-background = \"hsl(250, 15%, 97%)\"\n  syntax-foreground = \"hsl(250, 35%, 40%)\"\n  syntax-comment = \"hsl(250, 5%, 50%)\"\n  syntax-special = \"hsl(360, 75%, 60%)\"\n  syntax-operator = \"hsl(360, 75%, 60%)\"\n  syntax-lliteral = \"hsl(360, 75%, 60%)\"\n```\n\nNote that while the example uses `hsl` colors, any CSS color format can be used.\n","permalink":"https://lkummer.github.io/Satellite/v2.0.0/reference/customization/","section":"Reference","title":"Color Customization"},{"content":"\nFamiliarize yourself with the development workflow of the project.\n\nThis guide assumes you are somewhat familiar with Hugo theme development.\nIf not, [check out the Hugo documentation](https://gohugo.io/documentation/).\n\n## Basic Workflow\n\nDescribes the basic workflow of Satellite development.\n\n### Installation\n\nAfter cloning the Satellite repository, install the required dependencies:\n\n```s\n$ npm ci\n```\n\n### Development Server\n\nWhen making changes, a development server with the demo site should be used.\nTo run demo site development server:\n\n```s\n$ npm run dev\n```\n\nTo documentation site development server:\n\n```s\n$ npm run dev:doc\n```\n\n### Formatting and Linting\n\nBefore committing changes, make sure your code is formatted and passes all linters.\n\n```s\n$ npm run format\n$ npm run lint\n```\n\n## Development Scripts\n\nQuick summary of the development scripts:\n\n- `build` - Build the Hugo theme, demo and documentation sites for production.\n  Linting the sources in the process. Built artifacts are placed in the `dist`\n  folder.\n- `build:theme:debug` - Build the Hugo theme unminified with source maps.\n- `dev` - Run the demo site development server.\n- `dev:doc` - Run the documentation site development server.\n- `lint` - Lint all files with ESLint, Stylelint and Prettier.\n- `format` - Format all files with ESLint, Stylelint and Prettier.\n\nThe scripts can be invoked using `npm run`:\n\n```s\n$ npm run \u003cscript\u003e\n```\n\nFor example, if we want to build the theme we can use the `build` script:\n\n```s\n$ npm run build\n```\n","permalink":"https://lkummer.github.io/Satellite/v2.0.0/contribution/development/","section":"Contribution","title":"Development Workflow"},{"content":"\nSatellite is a Hugo theme for creating beautiful documentation websites.\n\nThis documentation is built with Satellite, [there is also a demo for you to check out](https://lkummer.github.io/Satellite/demo).\n","permalink":"https://lkummer.github.io/Satellite/v2.0.0/","section":"Documentation","title":"Documentation"},{"content":"\nThe quickest way to get up and running with Satellite is using the provided\nquickstart-site archive.\n\nThis guide assumes basic knowledge of Hugo website structure, and Hugo's CLI.\nSpecifically, [`hugo` for building sites](https://gohugo.io/commands/hugo/)\nand [`hugo server` hot reload server](https://gohugo.io/commands/hugo_server/).\n\nFor best compatibility, use Hugo `v0.81.0`. Newer versions should work fine.\n\n## Download and Installation\n\nHead over [to Satellite's releases on Github](https://github.com/LKummer/Satellite/releases)\nand download the latest quickstart-site archive.\nExtract the quickstart-site archive to an empty folder.\nThe site should be ready to build.\n\n## Development Server\n\nTo run a hot-reload development server, run Hugo `server` inside the folder\ncontaining the site:\n\n```s\n$ hugo server\n```\n\n## Production Build\n\nTo build the site, run Hugo inside the folder containing the site:\n\n```s\n$ hugo\n```\n\n## Further Configuration\n\nYour site should be ready for you [to start writing content]({{\u003c relref \"writing\" \u003e}}).\nFor futher configuration, check out [menu and navigation customization]({{\u003c ref \"/reference/menus\" \u003e}}),\n[color customization]({{\u003c ref \"/reference/customization\" \u003e}}) and other documentation pages.\n","permalink":"https://lkummer.github.io/Satellite/v2.0.0/guide/getting-started/","section":"Guides","title":"Getting Started"},{"content":"\nWant to make your Satellite website _pop_ with beautiful SVG logos?\nThis page contains everything you need to know to configure the customizable icons\nand logos of your Satellite website.\n\n## Favicon\n\nThe favicon can be customized using the `params.icons.favicon` configuration\noption. However, you also need to host your favicon.\n\nPlace the favicon in the `static/` folder of the website.\nIt is recommended to use a subfolder, such as `static/images/`.\nWith your icon in the static folder, set `params.icons.favicon` to the relative\npath of your favicon.\n\nFor example, Using `static/images/favicon.svg`:\n\n```toml\n[params]\n[params.icons]\n  favicon = \"images/favicon.svg\"\n```\n\n## Navigation Bar Logo\n\nThe navigation bar logo can be customized using the `params.icons.navbarIcon`\nconfiguration option.\nNote the navigation bar logo is completely optional and Satellite is designed to\nlook great even without it.\n\n`params.icons.navbarIcon` should contain an SVG logo with the `navbar-logo-icon`\nclass applied.\n\nTo create hover animations, use the `--logo-hover` custom property.\nNormally set to `0`, when users hover over the navigation bar logo (and text) it is set to `1`.\n\nCheck out the demo site configuration for an example.\n","permalink":"https://lkummer.github.io/Satellite/v2.0.0/reference/icons/","section":"Reference","title":"Icons and Logos"},{"content":"\nThis document assumes basic knowledge of [Hugo menus](https://gohugo.io/content-management/menus/).\n\n## Top Navigation\n\nThe `params.logoPermalink` option can be used to set where the top navigation\nlogo links to. By default the logo links to the site's index.\n\nThe `main` menu entries are listed in the top navigation bar and in the mobile\nhamburger menu. Note that `weight` can be set to order menu items.\n\nPages on the website can be added to the `main` menu through front matter options,\nfor example:\n\n```toml\n[menu.main]\n  weight = -10\n```\n\nExternal pages can be added through the site configuration, for example:\n\n```toml\n[menu]\n[[menu.main]]\n  name = \"Github\"\n  url = \"https://github.com/LKummer/Satellite-Hugo-Theme\"\n```\n\n## Section Navigation\n\nAll sections are listed in the index page, side navigation menu and mobile\nhamburger menu. `weight` front matter option can be set to order sections.\nLower weighted sections are listed first, unweighted sections are treated as if\nthey are weighted `0`.\n","permalink":"https://lkummer.github.io/Satellite/v2.0.0/reference/menus/","section":"Reference","title":"Menus and Navigation"},{"content":"\nDo you need Google enhanced search results and enhanced social media sharing?\nThis page documents Satellite's SEO related configuration options.\n\n## General\n\nThe `title` and `params.seo.description` configuration options can be used to set\na title and description for your website.\n\n```toml\ntitle = \"Satellite\"\n\n[params]\n[params.seo]\n  description = \"Satellite Hugo theme demo.\"\n```\n\nIn content pages, the title and description of the current page are used.\n\n## Twitter and Facebook\n\nTwitter and facebook allow specifying an image for your website.\nAdditionally, Twitter allows choosing card types.\n\nTwitter card can be chosen with `params.seo.twitterCard`, it can be set to\n`summary`, `summary_large_image`, `app` or `player`.\n\nUse `params.seo.images.ogPath`, `params.seo.images.ogHeight` and\n`params.seo.images.ogWidth` to the preferred image for your website.\nMake sure to place your image in the `static/` folder. The example below uses an\nimage in a `static/images/` folder.\n\n```\n[params]\n[params.seo]\n  twitterCard = \"summary\"\n  [params.seo.images]\n    ogPath = \"images/image.png\"\n    ogHeight = \"1080\"\n    ogWidth = \"1920\"\n```\n\n## Google\n\nGoogle allows specifying multiple images for your page.\nFor best results, use images at least 1200 pixels wide and in 1x1, 4x3 and 16x9\naspect ratios.\n\nUse the `params.seo.images.ldPaths` array to specify your preferred images.\nMake sure to place your images in the `static/` folder. The example below uses\nimages in a `static/images/` folder.\n\n```toml\n[params]\n[params.seo]\n  [params.seo.images]\n    ldPaths = [\n      \"images/image-1x1.png\",\n      \"images/image-4x3.png\",\n      \"images/image-16x9.png\"\n    ]\n```\n\n## Config Example\n\nBelow is a site configuration example in TOML format.\n\n```toml\n[params]\n[params.seo]\n  description = \"Satellite Hugo theme demo.\"\n  twitterCard = \"summary\"\n  [params.seo.images]\n    ldPaths = [\n      \"images/image-1x1.png\",\n      \"images/image-4x3.png\",\n      \"images/image-16x9.png\"\n    ]\n    ogPath = \"images/image.png\"\n    ogHeight = \"1080\"\n    ogWidth = \"1920\"\n```\n\nNote that in this example, images are places in a `static/images/` folder.\n","permalink":"https://lkummer.github.io/Satellite/v2.0.0/reference/seo/","section":"Reference","title":"Search Engine Optimizations"},{"content":"\nSatellite is built using a custom Webpack setup which processes `SCSS` files\nand copies files to different folders in order to use Sass without requiring\nextended Hugo and reduce folder nesting.\nThe [Webpack Hugo theme boilerplate is available on Github](https://github.com/LKummer/hugo-theme-boilerplate).\n\n## Folder Structure\n\nThe project has a somewhat unique folder structure for a Hugo theme as it uses\nWebpack to build the theme itself.\n\n- `layouts/` is copied to the theme's layouts folder.\n- `public/` is copied to the theme's root folder.\n- `src/` contains `.js` and `.scss` source files, including the Webpack entry point `src/index.js`.\n- `demo/` contains the demo website.\n- `doc/` contains the documentation website.\n\n## Style Architecture\n\nThe stylesheets are following [the SMACSS architecture](http://smacss.com/),\nand make ample use of Sass' `\u0026` operator to create nicely organized stylesheets.\n\nThe stylesheets reside in the `src/style/` folder, the usual SMACSS folders can\nbe found inside.\n\nPretty much everything is parameterized with CSS custom properties. Custom property\ndefinitions can be found in `src/style/theme/`\n\nEach part of the theme uses a separate color _family_ to for better color\ncustomization by end users. For example, the top navigation bar uses _secondary_\ncolors.\n","permalink":"https://lkummer.github.io/Satellite/v2.0.0/contribution/architecture/","section":"Contribution","title":"Theme Architecture"},{"content":"\nJust got Satellite installed and configured? You are probably looking to add\nsections and content to your website.\n\nIn this guide we will create an example section, content page, and configure\nboth to take advantage of Satellite's features.\n\nThis guide assumes basic knowledge about Hugo.\nSpecifically [knowledge about sections](https://gohugo.io/content-management/sections/),\n[front matter](https://gohugo.io/content-management/front-matter/)\nand single content pages.\n\n## Creating Sections\n\nSuppose we want a `guides` section.\nFirst, create a `guides` folder inside the site's `content` folder.\nThe name of the section's folder will be used in the path of single pages inside\nthat section.\n\nCreate a `_index.md` inside the `guides` folder created. The `_index.md` file will\ncontain the configuration of the section.\n\nEvery section should have a `title` and a `description`.\n`title` will be used as the title of the section.\n`description` will be used in the index page to describe the section.\n\n```toml\ntitle = \"Guides\"\ndescription = \"Great way to get up and running.\"\n```\n\nOptionally, sections can have `weight`. Lower weighted sections are listed first\nin section lists. Unweighted sections are treated as if their `weight` is `0`.\n\n```toml\nweight = 100\n```\n\nPutting everything together, our section's `_index.md` file should look somewhat\nlike this:\n\n```md\n+++\ntitle = \"Guides\"\ndescription = \"Great way to get up and running.\"\nweight = 100\n+++\n```\n\n## Creating Content Pages\n\nLet us create a quick start guide inside the `guides` section we just created.\n\nInside the `guides` section folder, create a `quickstart.md` file.\nThe name of the file will be used for the final path of the page.\n\nEvery content page should have a `title`.\n\n```toml\ntitle = \"Quick Start Guide\"\n```\n\nOptionally, pages can have a `description`.\n`description` will be used in social media and search engine meta tags,\nand indexed in the internal search.\n\n```toml\ndescription = \"Awesome guide to get you started.\"\n```\n\nOptionally, pages can have a `keywords` array.\n`keywords` are indexed in the internal search, and can be used to help users find\ncontent easily.\n\n```toml\nkeywords = [\"Install\", \"Deploy\"]\n```\n\nPutting everything together, our content page should look somewhat like this:\n\n```md\n+++\ntitle = \"Quick Start Guide\"\ndescription = \"Awesome guide to get you started.\"\nkeywords = [\"Install\", \"Deploy\"]\n+++\n\nMarkdown content of the page.\n```\n","permalink":"https://lkummer.github.io/Satellite/v2.0.0/guide/writing/","section":"Guides","title":"Writing and Organizing Content"}]
